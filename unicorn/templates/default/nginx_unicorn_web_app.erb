upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
  keepalive 64;
}

server {
  listen 80;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.log;

  client_max_body_size 4G;
  keepalive_timeout 30;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  location ~ /\.git {
    deny all;
  }

  location ~ ^/(assets)/  {
    root <%= @application[:absolute_document_root] %>;
    gzip_static on;
    expires max;
    access_log off;
    add_header Cache-Control public;
    add_header Access-Control-Allow-Origin *;
    break;
  }

  try_files $uri/index.html $uri.html $uri /public/system/maintenance.html @app;


  location @app {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    proxy_pass http://unicorn_<%= @application[:domains].first %>;
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
}

<% (node[:virtual_hosts] || []).each do |virtual_host| %>
  server {
  listen 80;
  server_name <%= virtual_host[:aliases]%>;
  rewrite .* <%= virtual_host[:hostname] %>$request_uri permanent;
  }
<% end %>
